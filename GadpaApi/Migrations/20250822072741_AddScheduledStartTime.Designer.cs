// <auto-generated />
using System;
using GadpaDebateApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GadpaApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250822072741_AddScheduledStartTime")]
    partial class AddScheduledStartTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("GadpaDebateApi.Data.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.BannedIp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BannedIps");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.Debate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowUserQuestions")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxQuestionsPerUser")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ScheduledStartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Debates");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.DebateQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DebateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DebateId");

                    b.ToTable("DebateQuestions");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.FireEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FireCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LiveDebateId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LiveDebateId");

                    b.ToTable("FireEvents");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.LiveDebate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentRound")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebateManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DebateId");

                    b.HasIndex("DebateManagerId");

                    b.ToTable("LiveDebates");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.UserSubmittedQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DebateId");

                    b.ToTable("UserSubmittedQuestions");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.DebateQuestion", b =>
                {
                    b.HasOne("GadpaDebateApi.Data.Debate", null)
                        .WithMany("Questions")
                        .HasForeignKey("DebateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GadpaDebateApi.Data.FireEvent", b =>
                {
                    b.HasOne("GadpaDebateApi.Data.LiveDebate", "LiveDebate")
                        .WithMany()
                        .HasForeignKey("LiveDebateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LiveDebate");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.LiveDebate", b =>
                {
                    b.HasOne("GadpaDebateApi.Data.Debate", "Debate")
                        .WithMany()
                        .HasForeignKey("DebateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GadpaDebateApi.Data.User", null)
                        .WithMany()
                        .HasForeignKey("DebateManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Debate");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.UserSubmittedQuestion", b =>
                {
                    b.HasOne("GadpaDebateApi.Data.Debate", "Debate")
                        .WithMany("UserSubmittedQuestions")
                        .HasForeignKey("DebateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debate");
                });

            modelBuilder.Entity("GadpaDebateApi.Data.Debate", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("UserSubmittedQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
